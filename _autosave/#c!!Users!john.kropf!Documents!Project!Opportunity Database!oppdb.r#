require(RODBC)
require(data.table)

db_tps <- odbcConnect('IBHUBG01', uid='HGKROPFJ', pwd='homedepot2')
db_dw2 <- odbcDriverConnect('driver={SQL Server};server=HUBDWDB01;database=DW2;trusted_connection=true')

txt_opportunities <- "
SELECT TPSDTA.OPPOPHSQL.OPP_NBR,
       TPSDTA.OPPOPHSQL.ORIGINAL_SOURCE_CODE,
       TPSDTA.OPPOPHSQL.IS_ACTIVE,
       TPSDTA.OPPOPHSQL.HAS_MANUAL,
       TPSDTA.OPPOPHSQL.HAS_BID,
       TPSDTA.OPPOPHSQL.HAS_PRICE,
       TPSDTA.OPPOPHSQL.HAS_MOVES,
       TPSDTA.OPPOPHSQL.CUST_NBR,
       TPSDTA.OPPOPHSQL.CUST_NAME,
       TPSDTA.OPPOPHSQL.PARENT_CUST_NBR,
       TPSDTA.OPPOPHSQL.PARENT_CUST_NAME,
       TPSDTA.OPPOPHSQL.REPORTING_CUST_NBR,
       TPSDTA.OPPOPHSQL.REPORTING_CUST_NAME,
       TPSDTA.OPPOPHSQL.BENE_CUST_NBR,
       TPSDTA.OPPOPHSQL.BENE_CUST_NAME,
       TPSDTA.OPPOPHSQL.PROSPECT_NAME,
       TPSDTA.OPPOPHSQL.SOURCE_REP,
       TPSDTA.OPPOPHSQL.SOURCE_REP_NAME,
       TPSDTA.OPPOPHSQL.ORIGIN_CITY,
       TPSDTA.OPPOPHSQL.ORIGIN_STATE,
       TPSDTA.OPPOPHSQL.ORIGIN_ZIP3,
       TPSDTA.OPPOPHSQL.ORIGIN_MARKET_RAMP,
       TPSDTA.OPPOPHSQL.ORIGIN_RAMP,
       TPSDTA.OPPOPHSQL.ORIGIN_ZONE,
       TPSDTA.OPPOPHSQL.DEST_CITY,
       TPSDTA.OPPOPHSQL.DEST_STATE,
       TPSDTA.OPPOPHSQL.DEST_ZIP3,
       TPSDTA.OPPOPHSQL.DEST_MARKET_RAMP,
       TPSDTA.OPPOPHSQL.DEST_RAMP,
       TPSDTA.OPPOPHSQL.DEST_ZONE,
       TPSDTA.OPPOPHSQL.MOST_RECENT_SOURCE,
       TPSDTA.OPPOPHSQL.MOST_RECENT_DATE,
       TPSDTA.OPPOPHSQL.MOST_RECENT_SALESREP,
       TPSDTA.OPPOPHSQL.MOST_RECENT_EQUIPTYPE,
       TPSDTA.OPPOPHSQL.MOST_RECENT_EQUIPLEN,
       TPSDTA.OPPOPHSQL.MOST_RECENT_VOLUME,
       TPSDTA.OPPOPHSQL.MOST_RECENT_VOLUME_TYPE,
       TPSDTA.OPPOPHSQL.MOST_RECENT_MILES,
       TPSDTA.OPPOPHSQL.MOST_RECENT_RPM,
       TPSDTA.OPPOPHSQL.MOST_RECENT_MODE,
       TPSDTA.OPPOPHSQL.MOST_RECENT_SUBMODE,
       TPSDTA.OPPOPHSQL.IML_PRICE_NBR,
       TPSDTA.OPPOPHSQL.IML_PRICE_SEQ,
       TPSDTA.OPPOPHSQL.IML_PRICE_AMT,
       TPSDTA.OPPOPHSQL.IML_PRICE_VOLUME,
       TPSDTA.OPPOPHSQL.IML_PRICE_VOLUME_TYPE,
       TPSDTA.OPPOPHSQL.IML_PRICE_EFF_DATE,
       TPSDTA.OPPOPHSQL.IML_PRICE_EXP_DATE,
       TPSDTA.OPPOPHSQL.IML_PRICE_STATUS,
       TPSDTA.OPPOPHSQL.IML_PRICE_SALESREP,
       TPSDTA.OPPOPHSQL.IML_PRICE_MILES,
       TPSDTA.OPPOPHSQL.OTR_PRICE_NBR,
       TPSDTA.OPPOPHSQL.OTR_PRICE_SEQ,
       TPSDTA.OPPOPHSQL.OTR_PRICE_AMT,
       TPSDTA.OPPOPHSQL.OTR_PRICE_VOLUME,
       TPSDTA.OPPOPHSQL.OTR_PRICE_VOLUME_TYPE,
       TPSDTA.OPPOPHSQL.OTR_PRICE_EFF_DATE,
       TPSDTA.OPPOPHSQL.OTR_PRICE_EXP_DATE,
       TPSDTA.OPPOPHSQL.OTR_PRICE_STATUS,
       TPSDTA.OPPOPHSQL.OTR_PRICE_SALESREP,
       TPSDTA.OPPOPHSQL.OTR_PRICE_MILES,
       TPSDTA.OPPOPHSQL.IML_BID_ID,
       TPSDTA.OPPOPHSQL.IML_BID_VOLUME,
       TPSDTA.OPPOPHSQL.IML_BID_VOLUME_TYPE,
       TPSDTA.OPPOPHSQL.IML_BID_DATE,
       TPSDTA.OPPOPHSQL.IML_BID_SALESREP,
       TPSDTA.OPPOPHSQL.IML_BID_MILES,
       TPSDTA.OPPOPHSQL.OTR_BID_ID,
       TPSDTA.OPPOPHSQL.OTR_BID_VOLUME,
       TPSDTA.OPPOPHSQL.OTR_BID_VOLUME_TYPE,
       TPSDTA.OPPOPHSQL.OTR_BID_DATE,
       TPSDTA.OPPOPHSQL.OTR_BID_SALESREP,
       TPSDTA.OPPOPHSQL.OTR_BID_MILES,
       TPSDTA.OPPOPHSQL.LAST_SHIP_DATE,
       TPSDTA.OPPOPHSQL.OTR_SHIP_VOLUME_ANNUAL,
       TPSDTA.OPPOPHSQL.OTR_LAST_SHIP_DATE,
       TPSDTA.OPPOPHSQL.OTR_MOVE_SALESREP,
       TPSDTA.OPPOPHSQL.IML_SHIP_VOLUME_ANNUAL,
       TPSDTA.OPPOPHSQL.IML_LAST_SHIP_DATE,
       TPSDTA.OPPOPHSQL.IML_MOVE_SALESREP,
       TPSDTA.OPPOPHSQL.CREATE_USER,
       TPSDTA.OPPOPHSQL.CREATE_PROGRAM,
       TPSDTA.OPPOPHSQL.CREATE_TIMESTAMP,
       TPSDTA.OPPOPHSQL.LAST_USER,
       TPSDTA.OPPOPHSQL.LAST_PROGRAM,
       TPSDTA.OPPOPHSQL.LAST_TIMESTAMP AS LAST_TIME,
       TPSDTA.OPPOPHSQL.WHOLESALE_FLAG
FROM TPSDTA.OPPOPHSQL
WHERE TPSDTA.OPPOPHSQL.CUST_NBR NOT IN (1494, 39175, 39174, 39176, 39177, 39173)
       AND TPSDTA.OPPOPHSQL.MOST_RECENT_DATE BETWEEN current date - 2 years and current date 
GROUP BY TPSDTA.OPPOPHSQL.OPP_NBR,
         TPSDTA.OPPOPHSQL.ORIGINAL_SOURCE_CODE,
         TPSDTA.OPPOPHSQL.IS_ACTIVE,
         TPSDTA.OPPOPHSQL.HAS_MANUAL,
         TPSDTA.OPPOPHSQL.HAS_BID,
         TPSDTA.OPPOPHSQL.HAS_PRICE,
         TPSDTA.OPPOPHSQL.HAS_MOVES,
         TPSDTA.OPPOPHSQL.CUST_NBR,
         TPSDTA.OPPOPHSQL.CUST_NAME,
         TPSDTA.OPPOPHSQL.PARENT_CUST_NBR,
         TPSDTA.OPPOPHSQL.PARENT_CUST_NAME,
         TPSDTA.OPPOPHSQL.REPORTING_CUST_NBR,
         TPSDTA.OPPOPHSQL.REPORTING_CUST_NAME,
         TPSDTA.OPPOPHSQL.BENE_CUST_NBR,
         TPSDTA.OPPOPHSQL.BENE_CUST_NAME,
         TPSDTA.OPPOPHSQL.PROSPECT_NAME,
         TPSDTA.OPPOPHSQL.SOURCE_REP,
         TPSDTA.OPPOPHSQL.SOURCE_REP_NAME,
         TPSDTA.OPPOPHSQL.ORIGIN_CITY,
         TPSDTA.OPPOPHSQL.ORIGIN_STATE,
         TPSDTA.OPPOPHSQL.ORIGIN_ZIP3,
         TPSDTA.OPPOPHSQL.ORIGIN_MARKET_RAMP,
         TPSDTA.OPPOPHSQL.ORIGIN_RAMP,
         TPSDTA.OPPOPHSQL.ORIGIN_ZONE,
         TPSDTA.OPPOPHSQL.DEST_CITY,
         TPSDTA.OPPOPHSQL.DEST_STATE,
         TPSDTA.OPPOPHSQL.DEST_ZIP3,
         TPSDTA.OPPOPHSQL.DEST_MARKET_RAMP,
         TPSDTA.OPPOPHSQL.DEST_RAMP,
         TPSDTA.OPPOPHSQL.DEST_ZONE,
         TPSDTA.OPPOPHSQL.MOST_RECENT_SOURCE,
         TPSDTA.OPPOPHSQL.MOST_RECENT_DATE,
         TPSDTA.OPPOPHSQL.MOST_RECENT_SALESREP,
         TPSDTA.OPPOPHSQL.MOST_RECENT_EQUIPTYPE,
         TPSDTA.OPPOPHSQL.MOST_RECENT_EQUIPLEN,
         TPSDTA.OPPOPHSQL.MOST_RECENT_VOLUME,
         TPSDTA.OPPOPHSQL.MOST_RECENT_VOLUME_TYPE,
         TPSDTA.OPPOPHSQL.MOST_RECENT_MILES,
         TPSDTA.OPPOPHSQL.MOST_RECENT_RPM,
         TPSDTA.OPPOPHSQL.MOST_RECENT_MODE,
         TPSDTA.OPPOPHSQL.MOST_RECENT_SUBMODE,
         TPSDTA.OPPOPHSQL.IML_PRICE_NBR,
         TPSDTA.OPPOPHSQL.IML_PRICE_SEQ,
         TPSDTA.OPPOPHSQL.IML_PRICE_AMT,
         TPSDTA.OPPOPHSQL.IML_PRICE_VOLUME,
         TPSDTA.OPPOPHSQL.IML_PRICE_VOLUME_TYPE,
         TPSDTA.OPPOPHSQL.IML_PRICE_EFF_DATE,
         TPSDTA.OPPOPHSQL.IML_PRICE_EXP_DATE,
         TPSDTA.OPPOPHSQL.IML_PRICE_STATUS,
         TPSDTA.OPPOPHSQL.IML_PRICE_SALESREP,
         TPSDTA.OPPOPHSQL.IML_PRICE_MILES,
         TPSDTA.OPPOPHSQL.OTR_PRICE_NBR,
         TPSDTA.OPPOPHSQL.OTR_PRICE_SEQ,
         TPSDTA.OPPOPHSQL.OTR_PRICE_AMT,
         TPSDTA.OPPOPHSQL.OTR_PRICE_VOLUME,
         TPSDTA.OPPOPHSQL.OTR_PRICE_VOLUME_TYPE,
         TPSDTA.OPPOPHSQL.OTR_PRICE_EFF_DATE,
         TPSDTA.OPPOPHSQL.OTR_PRICE_EXP_DATE,
         TPSDTA.OPPOPHSQL.OTR_PRICE_STATUS,
         TPSDTA.OPPOPHSQL.OTR_PRICE_SALESREP,
         TPSDTA.OPPOPHSQL.OTR_PRICE_MILES,
         TPSDTA.OPPOPHSQL.IML_BID_ID,
         TPSDTA.OPPOPHSQL.IML_BID_VOLUME,
         TPSDTA.OPPOPHSQL.IML_BID_VOLUME_TYPE,
         TPSDTA.OPPOPHSQL.IML_BID_DATE,
         TPSDTA.OPPOPHSQL.IML_BID_SALESREP,
         TPSDTA.OPPOPHSQL.IML_BID_MILES,
         TPSDTA.OPPOPHSQL.OTR_BID_ID,
         TPSDTA.OPPOPHSQL.OTR_BID_VOLUME,
         TPSDTA.OPPOPHSQL.OTR_BID_VOLUME_TYPE,
         TPSDTA.OPPOPHSQL.OTR_BID_DATE,
         TPSDTA.OPPOPHSQL.OTR_BID_SALESREP,
         TPSDTA.OPPOPHSQL.OTR_BID_MILES,
         TPSDTA.OPPOPHSQL.LAST_SHIP_DATE,
         TPSDTA.OPPOPHSQL.OTR_SHIP_VOLUME_ANNUAL,
         TPSDTA.OPPOPHSQL.OTR_LAST_SHIP_DATE,
         TPSDTA.OPPOPHSQL.OTR_MOVE_SALESREP,
         TPSDTA.OPPOPHSQL.IML_SHIP_VOLUME_ANNUAL,
         TPSDTA.OPPOPHSQL.IML_LAST_SHIP_DATE,
         TPSDTA.OPPOPHSQL.IML_MOVE_SALESREP,
         TPSDTA.OPPOPHSQL.CREATE_USER,
         TPSDTA.OPPOPHSQL.CREATE_PROGRAM,
         TPSDTA.OPPOPHSQL.CREATE_TIMESTAMP,
         TPSDTA.OPPOPHSQL.LAST_USER,
         TPSDTA.OPPOPHSQL.LAST_PROGRAM,
         TPSDTA.OPPOPHSQL.LAST_TIMESTAMP,
         TPSDTA.OPPOPHSQL.WHOLESALE_FLAG

"
txt_customers <- "
	select * from dbo.Customers
	"

dta_opportunities <- data.table(sqlQuery(db_tps,txt_opportunities,stringsAsFactors=FALSE))
dta_customers <- data.table(sqlQuery(db_dw2,txt_customers,stringsAsFactors=FALSE))

setkey(dta_opportunities, CUST_NBR)
setkey(dta_customers, CustomerID)

#update customer number 
a <- dta_opportunities[dta_customers,mult="first"]
a <- dta_customers[dta_opportunities,mult="first"]


dta_opportunities[,REPORTING_CUST_NBR:=dta_customers[,ReportingCustomerID], by=CUST_NBR]
View(dta_opportunities)



dta_opportunities[CUST_NBR==dta_customers[,CustomerID],
	REPORTING_CUST_NBR:=dta_customers[,ReportingCustomerID]]

dta_opportunities[CUST_NBR==dta_customers[,CustomerID],
	REPORTING_CUST_NAME:=dta_customers[,ReportingCustomerName]]

table(dta_opportunities[CUST_NBR])

str(dta_opportunities)


dta_customers[is.na(CustomerID)]
