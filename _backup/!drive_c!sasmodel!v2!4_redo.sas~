%include 'c:\sasmodel\v2\4.1_fcst_turntime.sas';

proc sort data= alldataplus;
    by eqid loaddt;
run;

/* data currentsupply; */
/*     set work.alldataplus; */
/*     by equid loaddt; */
/*     if last.equid; */
/*     if (datepart(compunldingdt) GE &today - &fcstoffset - &cursupdays and datepart(CompUnldingDt) LT &today) */
/*         or (datepart(CompdUnldingDt) >= &today - &fcstoffset - &fltsupdays and datepart(CompdUnldingDt) < &today */
/*         and (eqprov = "UPHU") ;  */
/*     if lastdatedef = 'CU'; */
/*     if fleetavailableflag = 'Y'; */
/*     Unloaddt = datepart(CompUnldingDt); */
/*     supplydt = &today - &fcstoffset; */
/*     if unloaddt = . then unloaddt = supplydt; */
/*     format unloaddt date9. supplydt date9.; */
/* run; */

/* proc sort data= currentsupply; */
/*     by fcstdest; */
/* run; */

/* proc means data= currentsupply noprint; */
/*     var loads; */
/*     output out = todaysupplynetwork; */
/* run; */

/* get out market equipment table from brendan */
libname dwpa odbc datasrc='dw_pa' schema=dbo;
data hublib.outnetworkequipment;
    set dwpa.outmarketequip;
run;

/* dont include current inventory */
/* take current movers, and transit time to current mover */

data work.transit1;
    set work.alldataplus;
    if lastdtdef = 'LD';
    if datepart(lastdt) GE &today - &fcstoffset - &transupdays;
    
run;

proc sort data= work.transit1;
    by fcstorig fcdest
run;

data work.transit;
    merge transit1 hublib.transitmedian;
    if lastdtdef = 'LD';
    if loadtonotify50 EQ . then loadtonotify50 = 6;
    projnotifydt = datepart(intnx(day,lastdt,loadtonotify50))
    lastevdate = datepart(lastdt);
    if lastevdate GE &today - &fcstoffset - &transupdays;
run;

/* proc means data= work.transit sum;   */
/*     var loads;   */
/* run;   */

data work.turners;
    set work.alldataplus;
    lastevdate = datepart(lastdt);
    if lastdtdef EQ 'ET' or lastdtdef EQ 'AR';
    if datepart(lastdt) GE &today - &fcstoffset - &turnsupdays;
    if LastDtDef EQ 'AR' then projnotifydt = NotifyDt;
    if FleetAvailableFlag EQ 'Y';
run;

/* proc means data= work.turners sum; */
/*     var loads; */
/* run; */

data work.movers;
    set work.turners work.transit;
    format notifyday date9. projnotifyday date9.;
    Notifyday = datepart(projnotifydt);
    notifydow = weekday(notifyday);
    projnotifyday = datepart(projnotifydt);
    if projnotifyday LT &today - 4 then projnotifyday = &today - 2;
run;

proc sort data= work.movers;
    by fcstdest notifydow destcompname;
run;

proc sort data= hublib.turntimedowdist;
    by fcstdest notifydow;
run;

data work.getdowturn;
    merge work.movers hublib.turntimedowdist;
    by fcstdest notifydow;
run;

data work.moversturn;
    set work.getdowturn;
    format supplydt date9. supplydt2 date9. notifyday date9. projnotifyday date9;
    supplydt2 = datepart(intnx(day,projnotifydt,nottounloaddays));
    if supplydt GT &today then supplydt = .;
    if supplydt NE .;
    loads = percent / 100;
run;

proc sort data= moversturn;
    by fcstdest supplydt;
run;

proc means data= moversturn noprint;
    by fcstdest supplydt;
    var loads;
    output out= movingsupply sum=;
run;
proc means data= movingsupply sum;
    var loads;
run;

proc means data= moversturn sum;
    var loads;
run;

data loadedsupplyfcst;
    set movingsupply;
    if supplydt LE &today - &fcstoffset - &fcsthoriz and supplydt GE &today - &fcstoffset;
    currentmovers = loads;
    keep fcstdest supplydt currentmovers loads;
run;

proc means data= loadedsupplyfcst sum;
    var currentmovers;
run;

proc means data= moversturn noprint;
    by fcstdest supplydt fleetmove;
    var loads;
    output out= movingfleet  sum= ;
run;

data movingfleetonly;
    set movingfleet;
    if fleetmove EQ 1;
    cmfleetcnt = loads;
run;

data movingemhuonly;
    set movingfleet;
    if fleetmove EQ 0;
    cmnonfleetcnt = loads;
run;

data hublib.currentmoversmix;
    merge movingfleetonly moingemhuonly;
    by fcstdt supplydt;
    if cmfleetcnt EQ . then cmfleetcnt= 0;
    if cmnonfleetcnt EQ . then cmnonfleetcnt= 0;
    cmfleetpct = cmfleetcnt / ( cmfleetcnt + cmnonfleetcnt );
    drop fleetmove;
run;

/* once again ignore current inventory */
/* put all the thing together     */

    
    

    




    
    
